---
name: CI
on: [ push, pull_request ]
jobs:
  omnilint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: docker://lpenz/omnilint:v0.2
  test:
    strategy:
        matrix:
          preset:
            - cppcheck
            - install
            - clang-tidy
            - clang-sanitizer-address
            - clang-sanitizer-memory
            - clang-sanitizer-undefined
            - clang-sanitizer-dataflow
            - clang-sanitizer-safe-stack
            - valgrind
            - cpack
            - coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          path: ghaction-cmake
      - uses: actions/checkout@v2
        with:
          repository: lpenz/execpermfix
          path: execpermfix
          fetch-depth: 0
      - uses: ./ghaction-cmake
        with:
          preset: ${{ matrix.preset }}
          working-directory: execpermfix
  dockerhub:
    needs: [ omnilint, test ]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: tag
        run: |
          gitdescribe=$(git describe --tags)
          if [ "${gitdescribe//-g*}" = "$gitdescribe" ]; then
              tag="$gitdescribe"
              echo ::set-output name=tag::${gitdescribe}
          fi
      - run: echo tag is ${{ steps.tag.outputs.tag }}
      - uses: docker/setup-qemu-action@v1
      - uses: docker/setup-buildx-action@v1
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v2
        if: ${{ steps.tag.outputs.tag != '' }}
        with:
          push: true
          tags: ${{ github.repository }}:${{ steps.tag.outputs.tag }}
