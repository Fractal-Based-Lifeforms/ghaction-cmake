---
name: CI
on: [ workflow_dispatch, push, pull_request ]
jobs:
  omnilint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: docker://lpenz/omnilint:0.5
  pytest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
      - uses: actions/setup-python@v4.3.0
      - name: Install pytest
        run: python -m pip install pytest
      - run: pytest
  test:
    strategy:
        matrix:
          preset:
            - cppcheck
            - install
            - clang-tidy
            - clang-sanitize-address
            - clang-sanitize-memory
            - clang-sanitize-undefined
            - clang-sanitize-dataflow
            - clang-sanitize-safe-stack
            - gcc-sanitize-address
            - valgrind
            # - cpack fails due to unspecified package version
            - coverage
            - cmake
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.1.0
        with:
          path: ghaction-cmake
      - uses: actions/checkout@v3.1.0
        with:
          repository: lpenz/execpermfix
          path: execpermfix
          fetch-depth: 0
      - uses: ./ghaction-cmake
        with:
          preset: ${{ matrix.preset }}
          working-directory: execpermfix
  publish-dockerhub:
    needs: [ omnilint, test ]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        variant:
          - base: debian:sid
            platform: linux/amd64
            label: main-gstreamer
            gstreamer-commit: 433301d0e5dde331c7081df7b94cef6650dc83ff
    steps:
      - uses: actions/checkout@v3.1.0
      - id: version
        uses: docker://lpenz/ghaction-version-gen:0.11.0
      - uses: docker/setup-qemu-action@v2.1.0
      - uses: docker/setup-buildx-action@v2.2.1
      - uses: docker/login-action@v2.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
        if: ${{ steps.version.outputs.version_docker_ci != 'null' }}
      - uses: docker/build-push-action@v3.2.0
        with:
          build-args: |
            BASE=${{ matrix.variant.base }}
            GSTREAMER_COMMIT_HASH=${{ matrix.variant.gstreamer-commit }}
          push: true
          platforms: ${{ matrix.variant.platform }}
          tags: |
            fractalbasedlifeforms/ghaction-cmake:${{ matrix.variant.label }}
            fractalbasedlifeforms/ghaction-cmake:${{ matrix.variant.label }}-${{ matrix.variant.gstreamer-commit }}
